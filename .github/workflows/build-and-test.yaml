
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/build-and-test.yaml'
      - 'src/geoarrow/**'
      - 'CMakeLists.txt'

name: Build and Test

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    name: ${{ matrix.config.label }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {label: default-build, cmake_args: "-DCMAKE_BUILD_TYPE=Debug -DGEOARROW_COVERAGE=ON"}
          - {label: bundled-build, cmake_args: "-DGEOARROW_BUNDLE=ON -DGEOARROW_USE_FAST_FLOAT=OFF -DGEOARROW_USE_RYU=OFF"}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt install -y -V ca-certificates lsb-release wget cmake valgrind
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt-get install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt-get update
          sudo apt-get install -y -V libarrow-dev
          rm apache-arrow-apt-*.deb

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DGEOARROW_BUILD_TESTS=ON ${{ matrix.config.cmake_args }}
          cmake --build .

      - name: Test
        run: |
          cd build
          GEOARROW_TESTING_DIR=$GITHUB_WORKSPACE/testing ctest -T test --output-on-failure .

      - name: Install lcov
        if: matrix.config.label == 'default-build'
        run: |
          sudo apt-get install lcov

      - name: Calculate coverage
        if: matrix.config.label == 'default-build'
        run: |
          cd build
          lcov --capture --directory . \
            --exclude "*_test.cc" \
            --exclude "/usr/*" \
            --exclude "*/gtest/*" \
            --exclude "*/ryu/*" \
            --exclude "*/fast_float.h" \
            --exclude "*/nanoarrow.*" \
            --output-file coverage.info

          lcov --list coverage.info

      - name: Upload coverage
        if: success() && matrix.config.label == 'default-build'
        uses: codecov/codecov-action@v2
        with:
          files: build/coverage.info

      - name: Test with memcheck
        if: matrix.config.label == 'default-build'
        run: |
          cd build
          ctest -T memcheck .

      - name: Upload memcheck results
        if: failure() && matrix.config.label == 'default-build'
        uses: actions/upload-artifact@main
        with:
          name: geoarrow-memcheck
          path: build/Testing/Temporary/MemoryChecker.*.log
