name: test-python

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/python.yaml'
      - 'src/geoarrow/**'
      - 'python/**'

jobs:
  test-python:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install (geoarrow-c)
        run: |
          pushd python/geoarrow-c
          pip install ".[test]"

      - name: Install (geoarrow-pyarrow)
        run: |
          pushd python/geoarrow-pyarrow
          pip install ".[test]"

      - name: Install (geoarrow-pandas)
        run: |
          pushd python/geoarrow-pandas
          pip install ".[test]"

      - name: Run tests (geoarrow-c)
        run: |
          pytest python/geoarrow-c/tests -v -s

      - name: Run tests (geoarrow-pyarrow)
        run: |
          pytest python/geoarrow-pyarrow/tests -v -s

      - name: Run tests (geoarrow-pandas)
        run: |
          pytest python/geoarrow-pandas/tests -v -s

      - name: Coverage (geoarrow-c)
        if: success() && matrix.python-version == '3.10'
        run: |
          sudo apt-get install -y lcov
          pip uninstall --yes geoarrow
          pip install pytest-cov Cython

          pushd python/geoarrow-c

          # Build with Cython + gcc coverage options
          pip install -e .[test]
          GEOARROW_COVERAGE=1 python3 setup.py build_ext --inplace

          # Run tests + coverage.py (generates .coverage + coverage.xml files)
          python -m pytest --cov ./src/geoarrow

      - name: Coverage (geoarrow-pyarrow, geoarrow-pandas)
        if: success() && matrix.python-version == '3.10'
        run: |
          # Run tests + coverage.py (generates .coverage + coverage.xml files)
          pushd python/geoarrow-pyarrow
          python -m pytest --cov ./src/geoarrow
          popd

          pushd python/geoarrow-pandas
          python -m pytest --cov ./src/geoarrow
          popd

      - name: Collect coverage
        if: success() && matrix.python-version == '3.10'
        run: |
          for pkg in c pyarrow pandas; do
            pushd python/geoarrow-$pkg
            python -m coverage xml
            popd
          done

          # Collect C coverage information
          pushd python/geoarrow-c
          lcov \
            --capture --directory build \
            --exclude "/usr/*" \
            --exclude "/opt/*" \
            --exclude "/Library/*" \
            --exclude "*/_lib.cpp" \
            --exclude "*/src/geoarrow/c/geoarrow/*" \
            --output-file=coverage.info

          lcov --list coverage.info

      - name: Upload coverage to codecov
        if: success() && matrix.python-version == '3.10'
        uses: codecov/codecov-action@v2
        with:
          files: 'python/geoarrow-c/geoarrow-coverage.info,python/geoarrow-c/coverage.xml,python/geoarrow-pyarrow/coverage.xml,python/geoarrow-pandas/coverage.xml'

      - name: Run doctests
        if: success() && matrix.python-version == '3.10'
        run: |
          # Because of namespace packaging we have to add __init__.py in geoarrow and
          # rebuild to avoid confusig pytest

          for pkg in c pyarrow pandas; do
            touch python/geoarrow-$pkg/src/geoarrow/__init__.py
            pip install python/geoarrow-$pkg
            pytest --pyargs geoarrow.$pkg --doctest-modules
          done
